{"ast":null,"code":"import jsTPS_Transaction from \"../common/jsTPS.js\";\n/**\r\n * MoveSong_Transaction\r\n * \r\n * This class represents a transaction that works with drag\r\n * and drop. It will be managed by the transaction stack.\r\n * \r\n * @author McKilla Gorilla\r\n * @author safwankader\r\n */\nexport default class AddSong_Transaction extends jsTPS_Transaction {\n  constructor(initStore, songIndex, newTitle, newArtist, newLink) {\n    super();\n    this.store = initStore;\n    this.oldSong = JSON.parse(JSON.stringify(initStore.currentList.songs[songIndex]));\n    this.index = songIndex;\n    this.title = newTitle;\n    this.artist = newArtist;\n    this.link = newLink;\n  }\n  doTransaction() {\n    this.store.addSong();\n  }\n  undoTransaction() {\n    let newSongs = this.store.currentList.songs;\n    let deleteSong = newSongs.pop();\n    this.store.deleteSongId = deleteSong._id;\n    this.store.deletSongName = deleteSong.name;\n    this.store.deleteSong();\n  }\n}","map":{"version":3,"names":["jsTPS_Transaction","AddSong_Transaction","constructor","initStore","songIndex","newTitle","newArtist","newLink","store","oldSong","JSON","parse","stringify","currentList","songs","index","title","artist","link","doTransaction","addSong","undoTransaction","newSongs","deleteSong","pop","deleteSongId","_id","deletSongName","name"],"sources":["C:/Users/skade/Playlister_HW3/client/src/transactions/EditSong_Transaction.js"],"sourcesContent":["import jsTPS_Transaction from \"../common/jsTPS.js\"\r\n/**\r\n * MoveSong_Transaction\r\n * \r\n * This class represents a transaction that works with drag\r\n * and drop. It will be managed by the transaction stack.\r\n * \r\n * @author McKilla Gorilla\r\n * @author safwankader\r\n */\r\nexport default class AddSong_Transaction extends jsTPS_Transaction {\r\n    constructor(initStore, songIndex, newTitle, newArtist, newLink) {\r\n        super();\r\n        this.store = initStore;\r\n        this.oldSong = JSON.parse(JSON.stringify(initStore.currentList.songs[songIndex]));\r\n        this.index = songIndex;\r\n        this.title = newTitle;\r\n        this.artist = newArtist;\r\n        this.link = newLink;\r\n\r\n    }\r\n\r\n    doTransaction() {\r\n        this.store.addSong();\r\n    }\r\n    \r\n    undoTransaction() {\r\n        let newSongs = this.store.currentList.songs;\r\n        let deleteSong = newSongs.pop();\r\n        this.store.deleteSongId = deleteSong._id;\r\n        this.store.deletSongName = deleteSong.name;\r\n        this.store.deleteSong();\r\n\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,iBAAiB,MAAM,oBAAoB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAMC,mBAAmB,SAASD,iBAAiB,CAAC;EAC/DE,WAAW,CAACC,SAAS,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,OAAO,EAAE;IAC5D,KAAK,EAAE;IACP,IAAI,CAACC,KAAK,GAAGL,SAAS;IACtB,IAAI,CAACM,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACT,SAAS,CAACU,WAAW,CAACC,KAAK,CAACV,SAAS,CAAC,CAAC,CAAC;IACjF,IAAI,CAACW,KAAK,GAAGX,SAAS;IACtB,IAAI,CAACY,KAAK,GAAGX,QAAQ;IACrB,IAAI,CAACY,MAAM,GAAGX,SAAS;IACvB,IAAI,CAACY,IAAI,GAAGX,OAAO;EAEvB;EAEAY,aAAa,GAAG;IACZ,IAAI,CAACX,KAAK,CAACY,OAAO,EAAE;EACxB;EAEAC,eAAe,GAAG;IACd,IAAIC,QAAQ,GAAG,IAAI,CAACd,KAAK,CAACK,WAAW,CAACC,KAAK;IAC3C,IAAIS,UAAU,GAAGD,QAAQ,CAACE,GAAG,EAAE;IAC/B,IAAI,CAAChB,KAAK,CAACiB,YAAY,GAAGF,UAAU,CAACG,GAAG;IACxC,IAAI,CAAClB,KAAK,CAACmB,aAAa,GAAGJ,UAAU,CAACK,IAAI;IAC1C,IAAI,CAACpB,KAAK,CAACe,UAAU,EAAE;EAE3B;AACJ"},"metadata":{},"sourceType":"module"}