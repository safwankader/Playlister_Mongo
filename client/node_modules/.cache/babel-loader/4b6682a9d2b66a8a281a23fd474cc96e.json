{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\skade\\\\Playlister_HW3\\\\client\\\\src\\\\components\\\\ListCard.js\",\n  _s = $RefreshSig$();\nimport { useContext, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { GlobalStoreContext } from '../store';\n/*\r\n    This is a card in our list of playlists. It lets select\r\n    a list for editing and it has controls for changing its \r\n    name or deleting it.\r\n    \r\n    @author McKilla Gorilla\r\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ListCard(props) {\n  _s();\n  const {\n    store\n  } = useContext(GlobalStoreContext);\n  const [editActive, setEditActive] = useState(false);\n  const [text, setText] = useState(\"\");\n  store.history = useHistory();\n  const {\n    idNamePair,\n    selected\n  } = props;\n  function handleLoadList(event) {\n    if (!event.target.disabled) {\n      let _id = event.target.id;\n      if (_id.indexOf('list-card-text-') >= 0) _id = (\"\" + _id).substring(\"list-card-text-\".length);\n\n      // CHANGE THE CURRENT LIST\n      store.setCurrentList(_id);\n    }\n  }\n  function handleToggleEdit(event) {\n    event.stopPropagation();\n    toggleEdit();\n  }\n  function handleDeleteList(event) {\n    event.stopPropagation();\n    let _id = event.target.id;\n    _id = (\"\" + _id).substring(\"delete-list-\".length);\n    store.markListForDeletion(_id);\n  }\n  function toggleEdit() {\n    let newActive = !editActive;\n    if (newActive) {\n      store.setIsListNameEditActive();\n    }\n    setEditActive(newActive);\n  }\n  function handleKeyPress(event) {\n    if (event.code === \"Enter\") {\n      let id = event.target.id.substring(\"list-\".length);\n      if (document.getElementById(\"add-list-button\")) {\n        document.getElementById(\"add-list-button\").disabled = false;\n      }\n      if (text) {\n        store.changeListName(id, text);\n      }\n      toggleEdit();\n    }\n  }\n  function handleUpdateText(event) {\n    setText(event.target.value);\n  }\n  let selectClass = \"unselected-list-card\";\n  if (selected) {\n    selectClass = \"selected-list-card\";\n  }\n  let cardStatus = false;\n  if (store.isListNameEditActive) {\n    cardStatus = true;\n  }\n  let cardElement = /*#__PURE__*/_jsxDEV(\"div\", {\n    id: idNamePair._id,\n    onClick: handleLoadList,\n    className: 'list-card ' + selectClass,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"list-card-text-\" + idNamePair._id,\n      className: \"list-card-text\",\n      children: idNamePair.name\n    }, \"span-\" + idNamePair._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      disabled: cardStatus,\n      type: \"button\",\n      id: \"delete-list-\" + idNamePair._id,\n      className: \"list-card-button\",\n      onClick: handleDeleteList,\n      value: \"ðŸ—‘\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      disabled: cardStatus,\n      type: \"button\",\n      id: \"edit-list-\" + idNamePair._id,\n      className: \"list-card-button\",\n      onClick: handleToggleEdit,\n      value: \"\\u270E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, idNamePair._id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n  if (editActive) {\n    document.getElementById('undo-button').disabled = true;\n    document.getElementById('redo-button').disabled = true;\n    cardElement = /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"list-\" + idNamePair._id,\n      className: \"list-card\",\n      type: \"text\",\n      onKeyPress: handleKeyPress,\n      onChange: handleUpdateText,\n      defaultValue: idNamePair.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this);\n  }\n  return cardElement;\n}\n_s(ListCard, \"fZ+dbcmrsEXJMahJiSuaIEnEUfk=\", false, function () {\n  return [useHistory];\n});\n_c = ListCard;\nexport default ListCard;\nvar _c;\n$RefreshReg$(_c, \"ListCard\");","map":{"version":3,"names":["useContext","useState","useHistory","GlobalStoreContext","ListCard","props","store","editActive","setEditActive","text","setText","history","idNamePair","selected","handleLoadList","event","target","disabled","_id","id","indexOf","substring","length","setCurrentList","handleToggleEdit","stopPropagation","toggleEdit","handleDeleteList","markListForDeletion","newActive","setIsListNameEditActive","handleKeyPress","code","document","getElementById","changeListName","handleUpdateText","value","selectClass","cardStatus","isListNameEditActive","cardElement","name"],"sources":["C:/Users/skade/Playlister_HW3/client/src/components/ListCard.js"],"sourcesContent":["import { useContext, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { GlobalStoreContext } from '../store'\r\n/*\r\n    This is a card in our list of playlists. It lets select\r\n    a list for editing and it has controls for changing its \r\n    name or deleting it.\r\n    \r\n    @author McKilla Gorilla\r\n*/\r\nfunction ListCard(props) {\r\n    const { store } = useContext(GlobalStoreContext);\r\n    const [ editActive, setEditActive ] = useState(false);\r\n    const [ text, setText ] = useState(\"\");\r\n    store.history = useHistory();\r\n    const { idNamePair, selected } = props;\r\n\r\n    function handleLoadList(event) {\r\n        if (!event.target.disabled) {\r\n            let _id = event.target.id;\r\n            if (_id.indexOf('list-card-text-') >= 0)\r\n                _id = (\"\" + _id).substring(\"list-card-text-\".length);\r\n\r\n            // CHANGE THE CURRENT LIST\r\n            store.setCurrentList(_id);\r\n        }\r\n    }\r\n\r\n    function handleToggleEdit(event) {\r\n        event.stopPropagation();\r\n        toggleEdit();\r\n    }\r\n\r\n    function handleDeleteList(event) {\r\n            event.stopPropagation();\r\n            let _id = event.target.id;\r\n            _id = (\"\" + _id).substring(\"delete-list-\".length);\r\n            store.markListForDeletion(_id);\r\n        \r\n    }\r\n\r\n    function toggleEdit() {\r\n        let newActive = !editActive;\r\n        if (newActive) {\r\n            store.setIsListNameEditActive();\r\n        }\r\n        setEditActive(newActive);\r\n    }\r\n\r\n    function handleKeyPress(event) {\r\n        if (event.code === \"Enter\") {\r\n            let id = event.target.id.substring(\"list-\".length);\r\n            if(document.getElementById(\"add-list-button\")){\r\n                document.getElementById(\"add-list-button\").disabled = false;\r\n            }\r\n            if(text){\r\n                store.changeListName(id, text);\r\n            }\r\n            toggleEdit();\r\n        }\r\n    }\r\n    function handleUpdateText(event) {\r\n        setText(event.target.value );\r\n    }\r\n\r\n    let selectClass = \"unselected-list-card\";\r\n    if (selected) {\r\n        selectClass = \"selected-list-card\";\r\n    }\r\n    let cardStatus = false;\r\n    if (store.isListNameEditActive) {\r\n        cardStatus = true;\r\n    }\r\n    let cardElement =\r\n        <div\r\n            id={idNamePair._id}\r\n            key={idNamePair._id}\r\n            onClick={handleLoadList}\r\n            className={'list-card ' + selectClass}>\r\n            <span\r\n                id={\"list-card-text-\" + idNamePair._id}\r\n                key={\"span-\" + idNamePair._id}\r\n                className=\"list-card-text\">\r\n                {idNamePair.name}\r\n            </span>\r\n            <input\r\n                disabled={cardStatus}\r\n                type=\"button\"\r\n                id={\"delete-list-\" + idNamePair._id}\r\n                className=\"list-card-button\"\r\n                onClick={handleDeleteList}\r\n                value={\"ðŸ—‘\"}\r\n            />\r\n            <input\r\n                disabled={cardStatus}\r\n                type=\"button\"\r\n                id={\"edit-list-\" + idNamePair._id}\r\n                className=\"list-card-button\"\r\n                onClick={handleToggleEdit}\r\n                value={\"\\u270E\"}\r\n            />\r\n        </div>;\r\n\r\n    if (editActive) {\r\n        document.getElementById('undo-button').disabled = true;\r\n        document.getElementById('redo-button').disabled = true;\r\n        cardElement =\r\n            <input\r\n                id={\"list-\" + idNamePair._id}\r\n                className='list-card'\r\n                type='text'\r\n                onKeyPress={handleKeyPress}\r\n                onChange={handleUpdateText}\r\n                defaultValue={idNamePair.name}\r\n            />;\r\n    }\r\n    return (\r\n        cardElement\r\n    );\r\n}\r\n\r\nexport default ListCard;"],"mappings":"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"},"metadata":{},"sourceType":"module"}